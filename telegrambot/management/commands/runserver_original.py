from django.core.management.base import BaseCommand
from django.core.management import call_command
import threading
import time
import sys
import os

class Command(BaseCommand):
    help = '–ó–∞–ø—É—Å–∫–∞–µ—Ç Django —Å–µ—Ä–≤–µ—Ä –≤–º–µ—Å—Ç–µ —Å Telegram –±–æ—Ç–∞–º–∏ (–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞)'

    def add_arguments(self, parser):
        parser.add_argument(
            '--host',
            default='127.0.0.1',
            help='–•–æ—Å—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 127.0.0.1)'
        )
        parser.add_argument(
            '--port',
            default='8000',
            help='–ü–æ—Ä—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 8000)'
        )
        parser.add_argument(
            '--no-bots',
            action='store_true',
            help='–ù–ï –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–æ–≤ (—Ç–æ–ª—å–∫–æ —Å–µ—Ä–≤–µ—Ä)'
        )

    def handle(self, *args, **options):
        host = options['host']
        port = options['port']
        no_bots = options['no_bots']
        
        self.stdout.write(
            self.style.SUCCESS(f'üöÄ –ó–∞–ø—É—Å–∫–∞—é Django —Å–µ—Ä–≤–µ—Ä –Ω–∞ {host}:{port}')
        )
        
        if not no_bots:
            self.stdout.write(
                self.style.SUCCESS('ü§ñ –ó–∞–ø—É—Å–∫–∞—é Telegram –±–æ—Ç—ã –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ...')
            )
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç—ã –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            def run_bots_thread():
                try:
                    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–æ–≤
                    from telegrambot.bot_integrated import start_bots
                    start_bots()
                except Exception as e:
                    self.stdout.write(
                        self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–æ–≤: {e}')
                    )
            
            bot_thread = threading.Thread(target=run_bots_thread, daemon=True)
            bot_thread.start()
            
            self.stdout.write(
                self.style.SUCCESS('‚úÖ –ë–æ—Ç—ã –∑–∞–ø—É—â–µ–Ω—ã –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ')
            )
        else:
            self.stdout.write(
                self.style.WARNING('‚ö†Ô∏è –ë–æ—Ç—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ --no-bots –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è)')
            )
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º Django —Å–µ—Ä–≤–µ—Ä
        try:
            from django.core.management.commands.runserver import Command as RunserverCommand
            runserver_cmd = RunserverCommand()
            runserver_cmd.handle(f'{host}:{port}', verbosity=1)
        except KeyboardInterrupt:
            self.stdout.write(
                self.style.WARNING('\nüõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º')
            )
        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}')
            ) 