// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ñ–∞–º–∏–ª–∏–π —Å —É—á–µ—Ç–æ–º –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ—à–∏–±–æ–∫
function isSimilarSurname(surname1, surname2) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã
    if (!surname1 || !surname2) return false;
    
    // –ü—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –∏ —É–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã
    const clean1 = surname1.toLowerCase().replace(/[^–∞-—è—ë]/g, '');
    const clean2 = surname2.toLowerCase().replace(/[^–∞-—è—ë]/g, '');
    
    // –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
    if (clean1 === clean2) return true;
    
    // –ï—Å–ª–∏ –æ–¥–Ω–∞ —Ñ–∞–º–∏–ª–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç –¥—Ä—É–≥—É—é –∏ –¥–ª–∏–Ω–Ω–µ–µ –Ω–µ –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 3 —Å–∏–º–≤–æ–ª–∞
    if (clean1.includes(clean2) && clean1.length - clean2.length <= 3) return true;
    if (clean2.includes(clean1) && clean2.length - clean1.length <= 3) return true;
    
    // –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –õ–µ–≤–µ–Ω—à—Ç–µ–π–Ω–∞ –¥–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö —Ñ–∞–º–∏–ª–∏–π
    if (clean1.length <= 5 && clean2.length <= 5) {
        // –î–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö —Ñ–∞–º–∏–ª–∏–π –¥–æ–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ 1 –æ—à–∏–±–∫—É
        return levenshteinDistance(clean1, clean2) <= 1;
    }
    
    // –î–ª—è –±–æ–ª–µ–µ –¥–ª–∏–Ω–Ω—ã—Ö —Ñ–∞–º–∏–ª–∏–π –¥–æ–ø—É—Å–∫–∞–µ–º –¥–æ 2 –æ—à–∏–±–æ–∫
    return levenshteinDistance(clean1, clean2) <= 2;
}

// –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –õ–µ–≤–µ–Ω—à—Ç–µ–π–Ω–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ö–æ–∂–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫
function levenshteinDistance(a, b) {
    if (a.length === 0) return b.length;
    if (b.length === 0) return a.length;

    const matrix = [];

    for (let i = 0; i <= b.length; i++) {
        matrix[i] = [i];
    }

    for (let j = 0; j <= a.length; j++) {
        matrix[0][j] = j;
    }

    for (let i = 1; i <= b.length; i++) {
        for (let j = 1; j <= a.length; j++) {
            const cost = a[j - 1] === b[i - 1] ? 0 : 1;
            matrix[i][j] = Math.min(
                matrix[i - 1][j] + 1,      // —É–¥–∞–ª–µ–Ω–∏–µ
                matrix[i][j - 1] + 1,      // –≤—Å—Ç–∞–≤–∫–∞
                matrix[i - 1][j - 1] + cost // –∑–∞–º–µ–Ω–∞
            );
        }
    }

    return matrix[b.length][a.length];
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ñ–∞–º–∏–ª–∏–π –∏ —á–∞—Å–æ–≤ –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
function extractEmployeesAndHours(messageText) {
    if (!messageText) return [];
    
    console.log('–ù–∞—á–∏–Ω–∞–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ñ–∞–º–∏–ª–∏–π –∏ —á–∞—Å–æ–≤ –∏–∑ —Ç–µ–∫—Å—Ç–∞:', messageText);
    
    const result = [];
    
    // –ò—â–µ–º –ø–∞—Ä—ã "–§–∞–º–∏–ª–∏—è —á–∏—Å–ª–æ" –≤ —Ç–µ–∫—Å—Ç–µ
    const pattern = /([–ê-–Ø][–∞-—è—ë]+)\s+(\d+)/g;
    let match;
    
    while ((match = pattern.exec(messageText)) !== null) {
        const surname = match[1];
        const hours = parseInt(match[2]);
        
        console.log(`–ù–∞–π–¥–µ–Ω–∞ –ø–∞—Ä–∞ "—Ñ–∞–º–∏–ª–∏—è —á–∏—Å–ª–æ": ${surname} - ${hours} —á–∞—Å–æ–≤`);
        
        result.push({
            surname: surname,
            hours: hours
        });
    }
    
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–∞—Ä—ã "–§–∞–º–∏–ª–∏—è —á–∏—Å–ª–æ", –∏—â–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ —Ñ–∞–º–∏–ª–∏–∏ –∏ —á–∏—Å–ª–∞
    if (result.length === 0) {
        // –ò—â–µ–º –≤—Å–µ —Ñ–∞–º–∏–ª–∏–∏ (—Å–ª–æ–≤–∞ —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã)
        const surnamesPattern = /[–ê-–Ø][–∞-—è—ë]+/g;
        const surnames = [];
        let surnameMatch;
        
        while ((surnameMatch = surnamesPattern.exec(messageText)) !== null) {
            surnames.push(surnameMatch[0]);
        }
        
        // –ò—â–µ–º –≤—Å–µ —á–∏—Å–ª–∞
        const hoursPattern = /\d+/g;
        const hours = [];
        let hoursMatch;
        
        while ((hoursMatch = hoursPattern.exec(messageText)) !== null) {
            hours.push(parseInt(hoursMatch[0]));
        }
        
        console.log('–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ñ–∞–º–∏–ª–∏–∏:', surnames);
        console.log('–ù–∞–π–¥–µ–Ω–Ω—ã–µ —á–∏—Å–ª–∞:', hours);
        
        // –°–æ–ø–æ—Å—Ç–∞–≤–ª—è–µ–º —Ñ–∞–º–∏–ª–∏–∏ –∏ —á–∞—Å—ã
        for (let i = 0; i < surnames.length; i++) {
            result.push({
                surname: surnames[i],
                hours: i < hours.length ? hours[i] : 8 // –ï—Å–ª–∏ —á–∞—Å–æ–≤ –º–µ–Ω—å—à–µ —á–µ–º —Ñ–∞–º–∏–ª–∏–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º 8 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            });
        }
    }
    
    // –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–∏, –¥–æ–±–∞–≤–ª—è–µ–º —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    if (result.length === 0) {
        console.log('–ù–µ –Ω–∞—à–ª–∏ –Ω–∏ –æ–¥–Ω–æ–π —Ñ–∞–º–∏–ª–∏–∏, –¥–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞');
        result.push({
            surname: '–ò–≤–∞–Ω–æ–≤',
            hours: 8
        });
    }
    
    console.log('–ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è:', result);
    return result;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–∞—Å–æ–≤ –≤ —Ç–∞–±–µ–ª—å
window.openHoursModal = function(messageText, messageDate) {
    const modal = document.getElementById('hoursModal');
    if (modal) {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º ID –æ–±—ä–µ–∫—Ç–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
        let objektId = null;
        const messageElement = document.activeElement.closest('.user-message') || document.querySelector('.user-message:hover');
        if (messageElement) {
            const iphoneScreen = messageElement.closest('.iphone-screen');
            if (iphoneScreen) {
                const dropdownToggle = iphoneScreen.querySelector('.dropdown-toggle');
                if (dropdownToggle) {
                    const onclickAttr = dropdownToggle.getAttribute('onclick');
                    if (onclickAttr) {
                        const match = onclickAttr.match(/toggleDropdown\((\d+)\)/i);
                        if (match && match[1]) {
                            objektId = match[1];
                            console.log(`–ù–∞–π–¥–µ–Ω ID –æ–±—ä–µ–∫—Ç–∞: ${objektId}`);
                        }
                    }
                }
            }
        }
        
        // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞—Ç—É –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—É—é –¥–∞—Ç—É –∏–ª–∏ —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
        let dateText = messageDate || new Date().toLocaleDateString('ru-RU');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–∞—Ç—ã
        if (messageText) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–î–∞—Ç–∞: XX.XX.XXXX" –∏–ª–∏ "–î–∞—Ç–∞: XX.XX"
            const dateMatch = messageText.match(/\b–¥–∞—Ç–∞:?\s*(\d{1,2}[.\/-]\d{1,2}(?:[.\/-]\d{2,4})?)/i);
            if (dateMatch && dateMatch[1]) {
                dateText = dateMatch[1];
            }
        }
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª—è –¥–∞—Ç—ã –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        const messageDateElement = document.getElementById('message-date');
        if (messageDateElement) {
            // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º—è –∏–∑ –¥–∞—Ç—ã, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –¥–∞—Ç—É
            let cleanDate = dateText;
            if (dateText.includes(' ')) {
                cleanDate = dateText.split(' ')[1]; // –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –≤—Ç–æ—Ä—É—é —á–∞—Å—Ç—å –ø–æ—Å–ª–µ –ø—Ä–æ–±–µ–ª–∞
            }
            messageDateElement.textContent = cleanDate;
        }
        
        // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –ø–æ ID
        const messageObjectElement = document.getElementById('message-object');
        if (messageObjectElement) {
            let objectText = "";
            
            // –ò–∑–≤–ª–µ–∫–∞–µ–º –æ–±—ä–µ–∫—Ç –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
            if (messageText) {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—ä–µ–∫—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–û–±—ä–µ–∫—Ç: –Ω–∞–∑–≤–∞–Ω–∏–µ" –∏–ª–∏ –ø–æ—Å–ª–µ "–ø–æ"
                const objectMatch = messageText.match(/\b–æ–±—ä–µ–∫—Ç:?\s*([^\n,]+)/i) || messageText.match(/\b–ø–æ\s+([^\n,]+)/i);
                if (objectMatch && objectMatch[1]) {
                    objectText = objectMatch[1].trim();
                }
            }
            
            // –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—Å—Ç–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –ø–æ ID
            if (!objectText && objektId) {
                // –ò—â–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞ –ø–æ ID –æ–±—ä–µ–∫—Ç–∞
                const dropdownToggle = document.querySelector(`.dropdown-toggle[onclick*="toggleDropdown(${objektId})"]`);
                if (dropdownToggle) {
                    const chatHeader = dropdownToggle.closest('.chat-header');
                    if (chatHeader) {
                        // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞ —á–∞—Ç–∞ (–Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞)
                        const headerText = chatHeader.textContent.trim();
                        if (headerText) {
                            // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞
                            objectText = headerText.replace(/[+‚úî‚úì‚úó‚ùåüîÑ‚ûï‚ûñ‚ûó‚òë‚òí‚òê‚úÖ‚ùé]/g, '').trim();
                            // –£–¥–∞–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é
                            objectText = objectText.replace(/–ß–∞—Å—ã —Ä–∞–±–æ—á–∏—Ö –≤ —Ç–∞–±–µ–ª—å/g, '').replace(/–ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ—Å—É—Ä—Å—ã/g, '').trim();
                            // –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–µ–ø–µ—á–∞—Ç–∞–µ–º—ã–µ —Å–∏–º–≤–æ–ª—ã
                            objectText = objectText.replace(/[^–ê-—è—ë–Åa-zA-Z0-9\s\-]/g, '').trim();
                            console.log(`–ù–∞–π–¥–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –ø–æ ID ${objektId}: ${objectText}`);
                        }
                    }
                }
            }
            
            // –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞, –∏—â–µ–º –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ —á–∞—Ç–∞
            if (!objectText) {
                // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞
                const messageContainer = document.querySelector('.message-item');
                let chatHeader = null;
                
                if (messageContainer) {
                    // –ü–æ–ª—É—á–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç iphone-screen
                    const iphoneScreen = messageContainer.closest('.iphone-screen');
                    if (iphoneScreen) {
                        chatHeader = iphoneScreen.querySelector('.chat-header');
                    }
                }
                
                // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —á–µ—Ä–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏—â–µ–º –ª—é–±–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞
                if (!chatHeader) {
                    chatHeader = document.querySelector('.chat-header');
                }
                
                if (chatHeader) {
                    // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞ —á–∞—Ç–∞ (–Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞)
                    const headerText = chatHeader.textContent.trim();
                    if (headerText) {
                        // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞
                        objectText = headerText.replace(/[+‚úî‚úì‚úó‚ùåüîÑ‚ûï‚ûñ‚ûó‚òë‚òí‚òê‚úÖ‚ùé]/g, '').trim();
                        // –£–¥–∞–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é
                        objectText = objectText.replace(/–ß–∞—Å—ã —Ä–∞–±–æ—á–∏—Ö –≤ —Ç–∞–±–µ–ª—å/g, '').replace(/–ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ—Å—É—Ä—Å—ã/g, '').trim();
                        // –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–µ–ø–µ—á–∞—Ç–∞–µ–º—ã–µ —Å–∏–º–≤–æ–ª—ã
                        objectText = objectText.replace(/[^–ê-—è—ë–Åa-zA-Z0-9\s\-]/g, '').trim();
                    }
                }
            }
            
            // –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç –ø—É—Å—Ç–æ–π –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–æ–±–µ–ª—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ª–æ–≤–æ "–æ–±—ä–µ–∫—Ç–µ"
            messageObjectElement.textContent = (objectText && objectText.trim()) ? objectText : "–æ–±—ä–µ–∫—Ç–µ –î–æ–º-3";
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        const messagePreview = document.createElement('div');
        messagePreview.className = 'message-preview';
        messagePreview.style.padding = '10px';
        messagePreview.style.marginBottom = '15px';
        messagePreview.style.backgroundColor = '#f0f8ff';
        messagePreview.style.borderLeft = '3px solid #007AFF';
        messagePreview.style.borderRadius = '5px';
        messagePreview.innerHTML = `<strong>–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:</strong><br>${messageText || '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç–∞'}`;
        
        // –ù–∞—Ö–æ–¥–∏–º —Ç–µ–ª–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        const modalBody = modal.querySelector('.modal-body');
        
        // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –ø—Ä–µ–≤—å—é, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        const existingPreview = modalBody.querySelector('.message-preview');
        if (existingPreview) {
            existingPreview.remove();
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–≤—å—é –≤ –Ω–∞—á–∞–ª–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        modalBody.insertBefore(messagePreview, modalBody.firstChild);
        
        // –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏–∑ JSON –≤ –±–ª–æ–∫–µ employees-list
        let employeesData = [];
        console.log('–ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫ —Å–ø–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤');
        const employeesList = document.querySelector('.employees-list pre');
        console.log('–ù–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç .employees-list pre:', employeesList);
        
        // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å–ø–∏—Å–æ–∫, –ø–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        if (!employeesList) {
            console.log('–°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ');
            employeesData = [
                {"fio": "–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á", "specialnost": "–∞–ª—å–ø–∏–Ω–∏—Å—Ç", "surname": "–ò–≤–∞–Ω–æ–≤"},
                {"fio": "–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤–∏—á", "specialnost": "–º–æ–Ω—Ç–∞–∂–Ω–∏–∫", "surname": "–ü–µ—Ç—Ä–æ–≤"},
                {"fio": "–°–∏–¥–æ—Ä–æ–≤ –°–∏–¥–æ—Ä –°–∏–¥–æ—Ä–æ–≤–∏—á", "specialnost": "—Å–≤–∞—Ä—â–∏–∫", "surname": "–°–∏–¥–æ—Ä–æ–≤"}
            ];
        } else {
            try {
                console.log('–¢–µ–∫—Å—Ç JSON:', employeesList.textContent);
                employeesData = JSON.parse(employeesList.textContent);
                console.log('–£—Å–ø–µ—à–Ω–æ –ø–∞—Ä—Å–∏–º JSON:', employeesData);
                
                // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–º–∏–ª–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞
                for (const employee of employeesData) {
                    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ñ–∞–º–∏–ª–∏—é –¥–ª—è –ø–æ–∏—Å–∫–∞
                    if (employee.fio) {
                        const parts = employee.fio.split(' ');
                        if (parts.length > 0) {
                            employee.surname = parts[0];
                        }
                    }
                }
            } catch (e) {
                console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:', e);
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
                employeesData = [
                    {"fio": "–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á", "specialnost": "–∞–ª—å–ø–∏–Ω–∏—Å—Ç", "surname": "–ò–≤–∞–Ω–æ–≤"},
                    {"fio": "–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤–∏—á", "specialnost": "–º–æ–Ω—Ç–∞–∂–Ω–∏–∫", "surname": "–ü–µ—Ç—Ä–æ–≤"},
                    {"fio": "–°–∏–¥–æ—Ä–æ–≤ –°–∏–¥–æ—Ä –°–∏–¥–æ—Ä–æ–≤–∏—á", "specialnost": "—Å–≤–∞—Ä—â–∏–∫", "surname": "–°–∏–¥–æ—Ä–æ–≤"}
                ];
            }
        }
        
        // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ñ–∞–º–∏–ª–∏–∏ –∏ —á–∞—Å—ã –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        console.log('–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:', messageText);
        const extractedEmployees = extractEmployeesAndHours(messageText);
        console.log('–ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –∏ —á–∞—Å—ã:', extractedEmployees);
        
        // –ü–æ–ª—É—á–∞–µ–º ID –æ–±—ä–µ–∫—Ç–∞ –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é
        let objektId = null;
        const messageContainer = document.querySelector('.message-item');
        let chatHeader = null;
        
        if (messageContainer) {
            // –ü–æ–ª—É—á–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç iphone-screen
            const iphoneScreen = messageContainer.closest('.iphone-screen');
            if (iphoneScreen) {
                chatHeader = iphoneScreen.querySelector('.chat-header');
            }
        }
        
        // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —á–µ—Ä–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏—â–µ–º –ª—é–±–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞
        if (!chatHeader) {
            chatHeader = document.querySelector('.chat-header');
        }
        
        if (chatHeader) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é —Å ID –æ–±—ä–µ–∫—Ç–∞
            const dropdownToggle = chatHeader.querySelector('.dropdown-toggle');
            if (dropdownToggle) {
                const onclickAttr = dropdownToggle.getAttribute('onclick');
                if (onclickAttr) {
                    const match = onclickAttr.match(/toggleDropdown\((\d+)\)/i);
                    if (match && match[1]) {
                        objektId = match[1];
                        console.log(`–ù–∞–π–¥–µ–Ω ID –æ–±—ä–µ–∫—Ç–∞ –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é: ${objektId}`);
                        
                        // –ò—â–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–æ –æ–±—ä–µ–∫—Ç—É
                        findEmployeesByObject(extractedEmployees, objektId);
                        return; // –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏, —Ç.–∫. –¥–∞–ª—å–Ω–µ–π—à–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –±—É–¥–µ—Ç –≤ findEmployeesByObject
                    }
                }
            }
        }
        
        // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ ID –æ–±—ä–µ–∫—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –ª–æ–≥–∏–∫—É
        console.log('–ù–µ –Ω–∞–π–¥–µ–Ω ID –æ–±—ä–µ–∫—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –ª–æ–≥–∏–∫—É');
        
        // –°–æ–∑–¥–∞–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π –±–ª–æ–∫
        let debugContainer = document.getElementById('employees-debug');
        if (!debugContainer) {
            debugContainer = document.createElement('div');
            debugContainer.id = 'employees-debug';
            debugContainer.style.padding = '10px';
            debugContainer.style.marginTop = '15px';
            debugContainer.style.backgroundColor = '#f8f9fa';
            debugContainer.style.border = '1px solid #dee2e6';
            debugContainer.style.borderRadius = '5px';
            debugContainer.style.fontSize = '0.9rem';
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
            const debugHeader = document.createElement('h4');
            debugHeader.textContent = '–û—Ç–ª–∞–¥–∫–∞ –ø–æ–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤';
            debugHeader.style.fontSize = '1rem';
            debugHeader.style.marginBottom = '10px';
            debugContainer.appendChild(debugHeader);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤—ã–±—Ä–∞—Ç—å –æ–±—ä–µ–∫—Ç
            const infoText = document.createElement('p');
            infoText.textContent = '–ù–µ –Ω–∞–π–¥–µ–Ω ID –æ–±—ä–µ–∫—Ç–∞. –î–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –æ–±—ä–µ–∫—Ç.';
            infoText.style.fontStyle = 'italic';
            debugContainer.appendChild(infoText);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            const modalBody = document.querySelector('.modal-body');
            if (modalBody) {
                modalBody.appendChild(debugContainer);
            }
        }
        
        // –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —á–∞—Å–æ–≤
        const hoursTable = modal.querySelector('.hours-table tbody');
        console.log('–ù–∞–π–¥–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ —á–∞—Å–æ–≤:', hoursTable);
        if (hoursTable) {
            hoursTable.innerHTML = '';
            
            // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∏–∑ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            let objectName = "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –ñ–ö";
            
            // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞ –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º —ç–ª–µ–º–µ–Ω—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            const messageContainer = document.querySelector('.message-item');
            let chatHeader = null;
            
            if (messageContainer) {
                // –ü–æ–ª—É—á–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç iphone-screen
                const iphoneScreen = messageContainer.closest('.iphone-screen');
                if (iphoneScreen) {
                    chatHeader = iphoneScreen.querySelector('.chat-header');
                }
            }
            
            // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —á–µ—Ä–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏—â–µ–º –ª—é–±–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞
            if (!chatHeader) {
                chatHeader = document.querySelector('.chat-header');
            }
            
            if (chatHeader) {
                // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞ —á–∞—Ç–∞ (–Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞)
                const headerText = chatHeader.textContent.trim();
                if (headerText) {
                    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞
                    objectName = headerText.replace(/[+‚úî‚úì‚úó‚ùåüîÑ‚ûï‚ûñ‚ûó‚òë‚òí‚òê‚úÖ‚ùé]/g, '').trim();
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é —Å ID –æ–±—ä–µ–∫—Ç–∞
                    const dropdownToggle = chatHeader.querySelector('.dropdown-toggle');
                    if (dropdownToggle) {
                        const onclickAttr = dropdownToggle.getAttribute('onclick');
                        if (onclickAttr) {
                            const match = onclickAttr.match(/toggleDropdown\((\d+)\)/i);
                            if (match && match[1]) {
                                const objectId = match[1];
                                console.log(`–ù–∞–π–¥–µ–Ω ID –æ–±—ä–µ–∫—Ç–∞ –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é: ${objectId}`);
                            }
                        }
                    }
                }
            }
            
            // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É —Å–æ–≤–ø–∞–¥–∞—é—â–∏–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏
            let matchFound = false;
            
            // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –∏–∑ –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            for (const extracted of extractedEmployees) {
                for (const employee of employeesData) {
                    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ç–æ–≤—É—é —Ñ–∞–º–∏–ª–∏—é –∏–ª–∏ –∏–∑–≤–ª–µ–∫–∞–µ–º –∏–∑ –ø–æ–ª–Ω–æ–≥–æ –§–ò–û
                    const employeeSurname = employee.surname || employee.fio.split(' ')[0];
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ö–æ–∂–µ—Å—Ç—å —Ñ–∞–º–∏–ª–∏–π
                    console.log(`–°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ñ–∞–º–∏–ª–∏–∏: "${extracted.surname}" –∏ "${employeeSurname}"`);
                    if (isSimilarSurname(extracted.surname, employeeSurname)) {
                        console.log(`–ù–ê–ô–î–ï–ù–û –°–û–í–ü–ê–î–ï–ù–ò–ï: "${extracted.surname}" –∏ "${employeeSurname}"!`);
                        
                        // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É –≤ —Ç–∞–±–ª–∏—Ü–µ —Å –¥–∞–Ω–Ω—ã–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td><input type="text" value="${employee.specialnost}" data-employee-id="${employee.id || ''}"></td>
                            <td><input type="text" value="${employee.fio}"></td>
                            <td><input type="number" value="${extracted.hours}" min="1" max="24"></td>
                            <td><input type="number" value="1.0" min="0.1" max="2.0" step="0.1"></td>
                            <td><input type="text" value="${objectName}"></td>
                        `;
                        hoursTable.appendChild(row);
                        matchFound = true;
                    }
                }
            }
            
            // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π, –Ω–æ –µ—Å—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –≤ —Å–ø–∏—Å–∫–µ
            if (!matchFound && employeesData.length > 0) {
                // –ï—Å–ª–∏ –µ—Å—Ç—å –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö —Å –ø–µ—Ä–≤—ã–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º
                if (extractedEmployees.length > 0) {
                    const extracted = extractedEmployees[0];
                    const employee = employeesData[0]; // –ë–µ—Ä–µ–º –ø–µ—Ä–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∏–∑ —Å–ø–∏—Å–∫–∞
                    
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td><input type="text" value="${employee.specialnost}" data-employee-id="${employee.id || ''}"></td>
                        <td><input type="text" value="${employee.fio}"></td>
                        <td><input type="number" value="${extracted.hours}" min="1" max="24"></td>
                        <td><input type="number" value="1.0" min="0.1" max="2.0" step="0.1"></td>
                        <td><input type="text" value="${objectName}"></td>
                    `;
                    hoursTable.appendChild(row);
                    matchFound = true;
                }
            }
            
            // –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π, –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É —Å –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
            if (!matchFound) {
                // –ï—Å–ª–∏ –µ—Å—Ç—å –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö
                if (extractedEmployees.length > 0) {
                    const extracted = extractedEmployees[0];
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td><input type="text" value="–ü—Ä–æ—Ä–∞–±"></td>
                        <td><input type="text" value="${extracted.surname}"></td>
                        <td><input type="number" value="${extracted.hours}" min="1" max="24"></td>
                        <td><input type="number" value="1.0" min="0.1" max="2.0" step="0.1"></td>
                        <td><input type="text" value="${objectName}"></td>
                    `;
                    hoursTable.appendChild(row);
                } else {
                    // –ò–Ω–∞—á–µ –¥–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td><input type="text" value="–ü—Ä–æ—Ä–∞–±"></td>
                        <td><input type="text" value="–ò–≤–∞–Ω–æ–≤ –ò.–ò."></td>
                        <td><input type="number" value="8" min="1" max="24"></td>
                        <td><input type="number" value="1.0" min="0.1" max="2.0" step="0.1"></td>
                        <td><input type="text" value="${objectName}"></td>
                    `;
                    hoursTable.appendChild(row);
                }
            }
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        console.log('–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤ –∫–æ–Ω—Ü–µ —Ñ—É–Ω–∫—Ü–∏–∏ openHoursModal');
        modal.style.display = 'block';
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        modal.style.zIndex = '10000';
        modal.style.opacity = '1';
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤–∏–¥–∏–º–æ
        setTimeout(function() {
            if (modal.style.display !== 'block') {
                console.log('–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è, –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞');
                modal.style.display = 'block';
            }
        }, 100);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
window.closeHoursModal = function() {
    const modal = document.getElementById('hoursModal');
    if (modal) {
        modal.style.display = 'none';
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —á–∞—Å–æ–≤ –≤ —Ç–∞–±–µ–ª—å
window.saveHours = function() {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É
    alert('–ß–∞—Å—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ç–∞–±–µ–ª—å');
    window.closeHoursModal();
}

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', function() {
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    document.querySelectorAll('.user-message').forEach(message => {
        message.addEventListener('click', function() {
            // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            const messageText = this.querySelector('.message-text').innerText;
            
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –∏–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è
            const messageMeta = this.querySelector('.message-meta');
            let messageDate = new Date().toLocaleDateString('ru-RU'); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç–µ–∫—É—â–∞—è –¥–∞—Ç–∞
            
            if (messageMeta) {
                const metaText = messageMeta.innerText;
                // –ü—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å –¥–∞—Ç—É –∏–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö (—Ñ–æ—Ä–º–∞—Ç: "–ò–º—è ‚Ä¢ –î–∞—Ç–∞")
                const datePart = metaText.split('‚Ä¢')[1];
                if (datePart) {
                    messageDate = datePart.trim();
                }
            }
            
            openHoursModal(messageText, messageDate);
        });
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
    window.addEventListener('click', function(event) {
        const modal = document.getElementById('hoursModal');
        if (event.target === modal) {
            closeHoursModal();
        }
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    const observer = new MutationObserver(function(mutations) {
        mutations.forEach(function(mutation) {
            if (mutation.type === 'childList') {
                mutation.addedNodes.forEach(function(node) {
                    if (node.nodeType === 1 && node.classList.contains('user-message')) {
                        node.addEventListener('click', function() {
                            const messageText = node.querySelector('.message-text').innerText;
                            
                            // –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –∏–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è
                            const messageMeta = node.querySelector('.message-meta');
                            let messageDate = new Date().toLocaleDateString('ru-RU'); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç–µ–∫—É—â–∞—è –¥–∞—Ç–∞
                            
                            if (messageMeta) {
                                const metaText = messageMeta.innerText;
                                // –ü—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å –¥–∞—Ç—É –∏–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö (—Ñ–æ—Ä–º–∞—Ç: "–ò–º—è ‚Ä¢ –î–∞—Ç–∞")
                                const datePart = metaText.split('‚Ä¢')[1];
                                if (datePart) {
                                    messageDate = datePart.trim();
                                }
                            }
                            
                            openHoursModal(messageText, messageDate);
                        });
                    }
                });
            }
        });
    });
    
    // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –≤—Å–µ–º–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    document.querySelectorAll('.messages-container').forEach(container => {
        observer.observe(container, { childList: true, subtree: true });
    });
});
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–æ —Ñ–∞–º–∏–ª–∏–∏ –∏ –æ–±—ä–µ–∫—Ç—É
function findEmployeesByObject(extractedEmployees, objektId) {
    if (!extractedEmployees || extractedEmployees.length === 0 || !objektId) {
        console.log('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤');
        return;
    }
    
    console.log(`–ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–æ –æ–±—ä–µ–∫—Ç—É ID: ${objektId}`);
    console.log('–ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ —Ñ–∞–º–∏–ª–∏–∏:', extractedEmployees);
    
    // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    let debugContainer = document.getElementById('employees-debug');
    if (!debugContainer) {
        debugContainer = document.createElement('div');
        debugContainer.id = 'employees-debug';
        debugContainer.style.padding = '10px';
        debugContainer.style.marginTop = '15px';
        debugContainer.style.backgroundColor = '#f8f9fa';
        debugContainer.style.border = '1px solid #dee2e6';
        debugContainer.style.borderRadius = '5px';
        debugContainer.style.fontSize = '0.9rem';
        debugContainer.style.maxHeight = '200px';
        debugContainer.style.overflowY = 'auto';
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const debugHeader = document.createElement('h4');
        debugHeader.textContent = '–û—Ç–ª–∞–¥–∫–∞ –ø–æ–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤';
        debugHeader.style.fontSize = '1rem';
        debugHeader.style.marginBottom = '10px';
        debugContainer.appendChild(debugHeader);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        const modalBody = document.querySelector('.modal-body');
        if (modalBody) {
            modalBody.appendChild(debugContainer);
        }
    } else {
        // –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ, –æ—Å—Ç–∞–≤–ª—è—è –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const debugHeader = debugContainer.querySelector('h4');
        debugContainer.innerHTML = '';
        if (debugHeader) {
            debugContainer.appendChild(debugHeader);
        }
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    const loadingIndicator = document.createElement('p');
    loadingIndicator.textContent = '–ò–¥–µ—Ç –ø–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤...';
    loadingIndicator.style.fontStyle = 'italic';
    debugContainer.appendChild(loadingIndicator);
    
    // –°–æ–±–∏—Ä–∞–µ–º —Ñ–∞–º–∏–ª–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞
    const surnames = extractedEmployees.map(emp => emp.surname);
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è cookie
    function getCsrfToken() {
        let cookieValue = null;
        if (document.cookie && document.cookie !== '') {
            const cookies = document.cookie.split(';');
            for (let i = 0; i < cookies.length; i++) {
                const cookie = cookies[i].trim();
                if (cookie.substring(0, 'csrftoken'.length + 1) === ('csrftoken=')) {
                    cookieValue = decodeURIComponent(cookie.substring('csrftoken'.length + 1));
                    break;
                }
            }
        }
        return cookieValue;
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º AJAX-–∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    fetch('/telegram/find-employees/', {
        method: 'POST',
        headers: {
            'X-CSRFToken': getCsrfToken(),
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            surnames: surnames,
            objekt_id: objektId
        })
    })
    .then(response => response.json())
    .then(data => {
        // –£–¥–∞–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if (loadingIndicator && loadingIndicator.parentNode === debugContainer) {
            debugContainer.removeChild(loadingIndicator);
        }
        
        if (data.success) {
            console.log('–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏:', data.employees);
            
            // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            const resultsHeader = document.createElement('p');
            resultsHeader.innerHTML = `<strong>–ù–∞–π–¥–µ–Ω–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: ${data.employees.length}</strong>`;
            debugContainer.appendChild(resultsHeader);
            
            // –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
            const employeesList = document.createElement('ul');
            employeesList.style.paddingLeft = '20px';
            employeesList.style.marginBottom = '10px';
            
            data.employees.forEach(emp => {
                const listItem = document.createElement('li');
                listItem.innerHTML = `<strong>${emp.fio}</strong> - ${emp.specialnost || '–î–æ–ª–∂–Ω–æ—Å—Ç—å –Ω–µ —É–∫–∞–∑–∞–Ω–∞'} (–°–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å "${emp.matched_surname}")`;
                employeesList.appendChild(listItem);
            });
            
            debugContainer.appendChild(employeesList);
            
            // –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–µ–Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ñ–∞–º–∏–ª–∏–∏
            if (data.not_found && data.not_found.length > 0) {
                const notFoundHeader = document.createElement('p');
                notFoundHeader.innerHTML = `<strong>–ù–µ –Ω–∞–π–¥–µ–Ω—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —Å —Ñ–∞–º–∏–ª–∏—è–º–∏:</strong>`;
                debugContainer.appendChild(notFoundHeader);
                
                const notFoundList = document.createElement('ul');
                notFoundList.style.paddingLeft = '20px';
                
                data.not_found.forEach(surname => {
                    const listItem = document.createElement('li');
                    listItem.textContent = surname;
                    notFoundList.appendChild(listItem);
                });
                
                debugContainer.appendChild(notFoundList);
            }
            
            // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É —á–∞—Å–æ–≤ –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏
            updateHoursTable(data.employees, extractedEmployees);
            
            // –Ø–≤–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            const modal = document.getElementById('hoursModal');
            if (modal) {
                console.log('–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö');
                modal.style.display = 'block';
            } else {
                console.error('–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
            }
            
        } else {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:', data.error);
            
            const errorMessage = document.createElement('p');
            errorMessage.textContent = `–û—à–∏–±–∫–∞: ${data.error || '–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤'}`;
            errorMessage.style.color = '#dc3545';
            debugContainer.appendChild(errorMessage);
        }
    })
    .catch(error => {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error);
        
        // –£–¥–∞–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if (loadingIndicator && loadingIndicator.parentNode === debugContainer) {
            debugContainer.removeChild(loadingIndicator);
        }
        
        const errorMessage = document.createElement('p');
        errorMessage.textContent = `–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: ${error.message || error}`;
        errorMessage.style.color = '#dc3545';
        debugContainer.appendChild(errorMessage);
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã —á–∞—Å–æ–≤ –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏
function updateHoursTable(employees, extractedEmployees) {
    if (!employees || employees.length === 0) return;
    
    const hoursTable = document.querySelector('.hours-table tbody');
    if (!hoursTable) return;
    
    // –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
    hoursTable.innerHTML = '';
    
    // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞
    const objectElement = document.getElementById('message-object');
    let objectName = objectElement ? objectElement.textContent : '–æ–±—ä–µ–∫—Ç–µ';
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏
    employees.forEach(employee => {
        // –ò—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —á–∞—Å—ã –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
        let hours = 8; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
        
        // –ò—â–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ —Ñ–∞–º–∏–ª–∏–∏ –∏–ª–∏ –¥—Ä—É–≥–æ–º—É —Å–ª–æ–≤—É
        for (const extracted of extractedEmployees) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ matched_word (–Ω–æ–≤–æ–µ –ø–æ–ª–µ) –∏–ª–∏ matched_surname (—Å—Ç–∞—Ä–æ–µ –ø–æ–ª–µ)
            const matchedWord = employee.matched_word || employee.matched_surname;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ matchedWord —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º toLowerCase()
            if (matchedWord && extracted.surname && 
                isSimilarSurname(extracted.surname, matchedWord)) {
                hours = extracted.hours;
                break;
            }
        }
        
        // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É –≤ —Ç–∞–±–ª–∏—Ü–µ
        const row = document.createElement('tr');
        row.innerHTML = `
            <td><input type="text" value="${employee.specialnost || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}" data-employee-id="${employee.id || ''}"></td>
            <td><input type="text" value="${employee.fio}"></td>
            <td><input type="number" value="${hours}" min="1" max="24"></td>
            <td><input type="number" value="1.0" min="0.1" max="2.0" step="0.1"></td>
            <td><input type="text" value="${objectName}"></td>
        `;
        hoursTable.appendChild(row);
    });
}